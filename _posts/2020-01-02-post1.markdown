---
layout: post
title: 权限提升
date: 2020-12-16 11:07:23 +0900
category: sample
---
# BLE安全分析脑图
![alt text](/public/img/secure-1.png)
---
layout: post
title:  "数据混淆"
date:   2018-10-27 21:45:09 +0400
---
特权升级包含攻击者用来在系统或网络上
获取更高级别权限的技术。对手通常可以
进入和探索具有无特权访问权限的网络，
但是需要提升的权限才能实现他们的目标。
常见方法是利用系统漏洞，配置错误和漏洞
。提升访问权限的示例包括：•系统/根级别•
本地管理员•具有类似于admin的访问权限的
用户帐户•具有访问特定系统或执行特定功能
的用户帐户这些技术通常与持久性技术重叠，
因为可以让对手持久化的操作系统功能可以
在提升的环境中执行。
{% highlight ruby %}

滥用权限提升控制机制	对手可能会规避旨
在控制提升特权以获得更高级别权限的机制。
大多数现代系统都包含本机海拔控制机制，旨
在限制用户可以在计算机上
执行的特权。必须授予特定用户授权才能执行
可以被认为具有较高风险的任务。对手可以执
行多种方法来利用内置的控制机制来提升系统上的特权。

Setuid和Setgid	攻击者可能使用setuid或setgid位执行外壳转义
或利用应用程序中的漏洞来获取在不同用户上下
文中运行的代码。在Linux或macOS上，当为应用
程序设置了setuid或setgid位时，该应用程序将
分别以拥有用户或组的特权运行。。通常，应用
程序是在当前用户的上下文中运行的，而不管哪
个用户或组拥有该应用程序。但是，在某些情况
下，需要在提升权限的上下文中执行程序才能正
常运行，但运行它们的用户不需要提升权限。

绕过用户帐户控制	攻击者可以绕过UAC机制来提
升系统上的进程特权。
Windows用户帐户控制（UAC）允许程序提升其特权
（跟踪的完整性级别从低到高），可以通过提示用户
进行确认来在管理员级别的权限下执行任务。对用户
的影响范围从拒绝强制执行操作到允许用户执行操作
（如果他们在本地管理员组中并单击提示）或允许他
们输入管理员密码来完成操作。

Sudo和Sudo缓存	攻击者可以执行sudo缓存和/或使
用suoders文件来提升特权。对手可能会执行此操作
以像其他用户一样执行命令或以更高的权限生成程序。
即时执行高架	攻击者可以AuthorizationExecute
WithPrivileges
通过提示用户输入凭据来利用API来提升特权。该API
的目的是为应用程序开发人员提供一种以root特权执
行操作的简便方法，例如用于应用程序安装或更新。
此API不会验证请求root特权的程序是否来自信誉良
好的源或已被恶意修改。

访问令牌操纵	攻击者可以修改访问令牌以在不同
的用户或系统安全
上下文下运行，以执行操作并绕过访问控制。Window
s使用访问令牌来确定正在运行的进程的所有权。用户
可以操纵访问令牌以使正在运行的进程看起来像是其他
进程的子进程，或者好像属于启动该进程的用户之外的
其他人。发生这种情况时，该过程还将采用与新令牌关
联的安全性上下文。

令牌模拟/盗窃	对手可能会复制，然后冒充另一个用
户的令牌以提升特
权并绕过访问控制。对手可以创建一个新的访问令牌，该
令牌使用来复制现有令牌DuplicateToken(Ex)。然后可以
将该令牌用于ImpersonateLoggedOnUser允许调用线程模
拟已登录用户的安全上下文，或者SetThreadToken用于将
模拟令牌分配给线程。

使用令牌创建流程	攻击者可以使用重复的令牌创建新
的流程，以升级特权并绕
过访问控制。对手可以复制所需的访问令牌，DuplicateToken(Ex)
并与之一起使用CreateProcessWithTokenW以创建在模拟用户的安
全上下文下运行的新进程。这对于在其他用户的安全上下文下创建新流程很有用。

制作和模拟令牌	攻击者可能制作和模拟令牌以提升特权并绕过访问控制。
如果攻击者具有用户名和密码，但用户未登录系统，则攻击者
可以使用该LogonUser功能为用户创建登录会话。该函数将返
回新会话的访问令牌的副本，并且对手可以SetThreadToken用来将令牌分配给线程。

父级PID欺骗	对手可能会欺骗新进程的父进程标识符（PPID），以逃避进
程监视防御或提升特权。除非明确指定，否则通常直接从其父
进程或调用进程中产生新进程。显式分配新进程的PPID的一种
方法是通过CreateProcessAPI调用，该调用支持定义要使用的
PPID的参数。Windows功能（例如，用户帐户控制（UAC））使
用此功能来在SYSTEM（通常通过svchost.exe或consent.exe）
而不是当前用户上下文生成请求的提升进程后正确设置PPID 。

SID历史注入	攻击者可以使用SID历史记录注入来提升特权并绕过访问控制。
Windows安全标识符（SID）是标识用户或组帐户的唯一值。
Windows安全在安全描述符和访问令牌中都使用SID。帐户可以
在SID历史Active Directory属性中保留其他SID，从而允许在域之间进行可互操
作的帐户迁移（例如，SID历史中的所有值都包含在访问令牌中）。

引导或登录自动启动执行	攻击者可以将系统设置配置为在系统启动或登录期间自动执
行程序，以保持持久性或在受到感染的系统上获得更高级别
的特权。操作系统可能具有在系统引导或帐户登录时自动运
行程序的机制。这些机制可能包括自动执行放置在特别指定
的目录中或由存储配置信息的存储库（例如Windows注册表）
引用的程序。攻击者可以通过修改或扩展内核的功能来实现相同的目标。

注册表运行键/启动文件夹	攻击者可以通过将程序添加到启动文件夹或使用注册表运行
键对其进行引用来实现持久性。在注册表或启动文件夹中的
“运行键”中添加一个条目将使引用的程序在用户登录时执行。
这些程序将在用户的上下文中执行，并将具有帐户的关联权限级别。
认证包	系统启动时，攻击者可能会滥用身份验证包来执行DLL。
Windows身份验证包DLL由系统启动时的本地安全机构（LSA）
进程加载。它们为操作系统提供了多种登录过程和多种安全协议的支持。

